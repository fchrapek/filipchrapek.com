---
import NavLink from "./NavLink.astro";
import ThemeToggle from "./ThemeToggle.astro";
import siteConfig from "../data/site-config";

const navLinks = siteConfig.headerNavLinks || [];
---

<nav class="nav">
  {
    navLinks.length > 0 && (
      <div class="">
        {/* <button
          class=""
          aria-label="Open Menu"
          aria-expanded="false"
          aria-controls="menu-items"
        >
          <span class="" />
        </button> */}
        <ul id="menuItems" class="navItems">
          {navLinks.map((link) => (
            <li class="navItem">
              <NavLink class="navLink" href={link.href}>
                {link.text}
              </NavLink>
            </li>
          ))}
        </ul>
      </div>
    )
  }
  <div class="themeToggle">
    <ThemeToggle />
  </div>
</nav>

<style>
  .nav {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  .navItems {
    display: flex;
    gap: 1rem;
    list-style-type: none;
    padding: 0;
  }

  .navLink {
    color: inherit;
    text-decoration: none;
  }
</style>

<script>
  function menuToggle() {
    const menu = document.querySelector(".menu");
    const menuToggleBtn = document.querySelector(".menu-toggle");
    menuToggleBtn?.addEventListener("click", () => {
      const isMenuExpanded =
        menuToggleBtn.getAttribute("aria-expanded") === "true";
      menuToggleBtn.classList.toggle("is-active");
      menuToggleBtn.setAttribute(
        "aria-expanded",
        isMenuExpanded ? "false" : "true"
      );
      menuToggleBtn.setAttribute(
        "aria-label",
        isMenuExpanded ? "Open Menu" : "Close Menu"
      );
      menu?.classList.toggle("is-visible");
    });
  }
  menuToggle();
  document.addEventListener("astro:after-swap", menuToggle);
</script>
