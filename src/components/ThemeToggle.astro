---

---

<div data-theme-picker id="theme">
  <button aria-label="light">☀️</button>
  <button aria-label="dark">🌑</button>
</div>

<style>
  button {
    cursor: pointer;
    background-color: var(--color-base-90);
    border: none;
    appearance: none;
    border-radius: 0.2rem;
    opacity: 0.5;
    transition: opacity 0.3s;
    width: 2rem;
    height: 2rem;
    display: inline-grid;
    place-content: center;
  }

  button:hover,
  button.active {
    opacity: 1;
  }
</style>

<script>
  document.addEventListener("astro:page-load", () => {
    const themeSwitcher = document.querySelector("[data-theme-picker]");
    if (!themeSwitcher) return;

    const themeButtons = themeSwitcher.querySelectorAll("button");
    if (themeButtons.length === 0) return;

    function getThemePreference() {
      if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
        return localStorage.getItem('theme');
      }
      return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
    }

    function setTheme(theme) {
      document.documentElement.setAttribute('data-theme', theme);
      localStorage.setItem('theme', theme);
      updateButtonStates(theme);
    }

    function updateButtonStates(theme) {
      themeButtons.forEach((button) => {
        button.classList.toggle("active", button.getAttribute("aria-label") === theme);
      });
    }

    // Set initial button states
    const currentTheme = getThemePreference();
    updateButtonStates(currentTheme);

    // Add click event listener to each button to change theme
    themeButtons.forEach((button) => {
      button.addEventListener("click", () => {
        const newTheme = button.getAttribute("aria-label");
        setTheme(newTheme);
      });
    });
  });
</script>
